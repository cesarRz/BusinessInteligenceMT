-- Active: 1662052389079@@148.230.13.152@1521@orcl@ISTI422

-- ¿Cuáles son los 3 clientes con mayor impacto en número de faltantes, por región?
SELECT REGION, ID_CLIENTE, 
SUM(UNIDADES_ORDENADAS) AS U_ORDENADAS, 
SUM(UNIDADES_FACTURADAS) AS U_FACTURADAS, ROUND((SUM(UNIDADES_FACTURADAS)/SUM(UNIDADES_ORDENADAS))*100,2) AS FILL_RATE
FROM EST_ORDENES, EST_ESTADO
WHERE EST_ORDENES.ID_ESTADO = EST_ESTADO.ID_ESTADO AND REGION = 'NORTE'
GROUP BY REGION, ID_CLIENTE 
HAVING SUM(UNIDADES_FACTURADAS)/SUM(UNIDADES_ORDENADAS) != 1
ORDER BY REGION, FILL_RATE
FETCH NEXT 3 ROWS ONLY;

SELECT REGION, ID_CLIENTE, 
SUM(UNIDADES_ORDENADAS) AS U_ORDENADAS, 
SUM(UNIDADES_FACTURADAS) AS U_FACTURADAS, ROUND((SUM(UNIDADES_FACTURADAS)/SUM(UNIDADES_ORDENADAS))*100,2) AS FILL_RATE
FROM EST_ORDENES, EST_ESTADO
WHERE EST_ORDENES.ID_ESTADO = EST_ESTADO.ID_ESTADO AND REGION = 'OCCIDENTE'
GROUP BY REGION, ID_CLIENTE 
HAVING SUM(UNIDADES_FACTURADAS)/SUM(UNIDADES_ORDENADAS) != 1
ORDER BY REGION, FILL_RATE
FETCH NEXT 3 ROWS ONLY;

SELECT REGION, ID_CLIENTE, 
SUM(UNIDADES_ORDENADAS) AS U_ORDENADAS, 
SUM(UNIDADES_FACTURADAS) AS U_FACTURADAS, ROUND((SUM(UNIDADES_FACTURADAS)/SUM(UNIDADES_ORDENADAS))*100,2) AS FILL_RATE
FROM EST_ORDENES, EST_ESTADO
WHERE EST_ORDENES.ID_ESTADO = EST_ESTADO.ID_ESTADO AND REGION = 'CENTRO'
GROUP BY REGION, ID_CLIENTE 
HAVING SUM(UNIDADES_FACTURADAS)/SUM(UNIDADES_ORDENADAS) != 1
ORDER BY REGION, FILL_RATE
FETCH NEXT 3 ROWS ONLY;

SELECT REGION, ID_CLIENTE, 
SUM(UNIDADES_ORDENADAS) AS U_ORDENADAS, 
SUM(UNIDADES_FACTURADAS) AS U_FACTURADAS, ROUND((SUM(UNIDADES_FACTURADAS)/SUM(UNIDADES_ORDENADAS))*100,2) AS FILL_RATE
FROM EST_ORDENES, EST_ESTADO
WHERE EST_ORDENES.ID_ESTADO = EST_ESTADO.ID_ESTADO AND REGION = 'SURESTE'
GROUP BY REGION, ID_CLIENTE 
HAVING SUM(UNIDADES_FACTURADAS)/SUM(UNIDADES_ORDENADAS) != 1
ORDER BY REGION, FILL_RATE
FETCH NEXT 3 ROWS ONLY;

-- ¿Cuáles son las temporadas (mes y bimestre) con mayor faltantes?

SELECT BIMESTRE, MES,
SUM(UNIDADES_ORDENADAS) AS U_ORDENADAS, 
SUM(UNIDADES_FACTURADAS) AS U_FACTURADAS, ROUND((SUM(UNIDADES_FACTURADAS)/SUM(UNIDADES_ORDENADAS))*100,2) AS FILL_RATE
FROM EST_ORDENES, EST_TIEMPO
WHERE EST_ORDENES.ID_TIEMPO = EST_TIEMPO.ID_TIEMPO
GROUP BY BIMESTRE, MES
HAVING SUM(UNIDADES_FACTURADAS)/SUM(UNIDADES_ORDENADAS) != 1
ORDER BY FILL_RATE
FETCH NEXT 100 ROWS ONLY;

