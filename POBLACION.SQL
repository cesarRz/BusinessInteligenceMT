
------------------------------------------------ INSERTS A TABLA DE EST_PRODUCTOS
-- CALCIO POWER OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'CALCIO POWER') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, 'CHOC') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'CALCIO POWER');

-- CATAPRO PREMIUM 2 OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'CATAPRO (PREMIUM|PREM) 2') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, 'PWD\ PREM|PWD|W/PDX\ PWD|PDX\ PWD|POGO\ PWD') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'CATAPRO (PREMIUM|PREM) 2');

-- CHOCOLECHE OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, '(CHOCO|CH)(\ )?LECHE') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, 'PWD(\ )?(CHOC\+STW|CHOC|STW|CINN|NEOP|BAN|BANNANA)?') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, '(CHOCO|CH)(\ )?LECHE');

-- CNTG PREMIUM OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'CNTG(\ )?(PREM|PREMIUM)(\ )?3 ') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(VAN\ )?PWD(\ )?(BL)?') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'CNTG(\ )?(PREM|PREMIUM)(\ )?3');

-- CRECE-MAX PREMIUM 3 OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
REGEXP_SUBSTR(DESCRIPCION, 'CRECE-MAX\ (PREM|PREMIUM)\ 3') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(VAN\ )?PWD(\ )?(BL|VAN)?') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'CRECE-MAX\ (PREM|PREMIUM)\ 3');


-- ENFAMOM OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
REGEXP_SUBSTR(DESCRIPCION, 'ENFAMOM') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, 'PWD(\ )?(BL|VAN|CHOC)?') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'ENFAMOM');

--ETNFIPWI OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
REGEXP_SUBSTR(DESCRIPCION, 'ETNFIPWI PREM') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '24CAL NUR') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, ' 2OZ ') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'ETNFIPWI PREM');

--FER-IN-SOL OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
REGEXP_SUBSTR(DESCRIPCION, 'FER-IN-SOL') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, 'DRP') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'FER-IN-SOL');

--HAPPINF OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'HAPPINF') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(\s)([^*]+)(\s)(PWD|NUR)') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'HAPPINF');

-- INF OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, '^INF') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(\s)([^*]+)(\s)(PWD|NUR)') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, '^INF');

--KIDFEL OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'KIDFEL') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(\s)([^*]+)(\s)(PWD|NUR|NF)') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'KIDFEL');

--NUTRIMI OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'NUTRIMI') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(\s)([^*]+)(\s)(PWD|NUR|NF)') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'NUTRIMI');

--POLY-TA-SOL OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'POLY-TA-SOL') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(PWD|NUR|NF|DRP)') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'POLY-TA-SOL');

--PRASOBEE OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'PRASOBEE') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(PWD|NUR|NF|POWDER|DRP)') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)|(\d+KG)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'PRASOBEE');

--PREGESTA (1) OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'PREGESTA') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(PWD|NUR|NF|POWDER|DRP)') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)|(\d+KG)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'PREGESTA');

--PRI-BI-SOL (1) OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'PRI-BI-SOL') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(PWD|NUR|NF|POWDER|DRP)') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)|(\d+KG)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'PRI-BI-SOL');

--PROVIT (3) OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'PROVIT') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(PWD|NUR|NF|POWDER|DRP) (CHOC\+STW|CHOC|STW|CINN|NEOP|VAN|BAN|BANNANA)?') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)|(\d+KG)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'PROVIT');

--TUSFACAT (3) OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'TUSFACAT') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(PWD|NUR|NF|POWDER|DRP) (CHOC\+STW|CHOC|STW|CINN|NEOP|VAN|BAN|BANNANA)?') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)|(\d+KG)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'TUSFACAT');

--VITAMINA-TE OK
INSERT INTO EST_PRODUCTO (ID_PRODUCTO, CATEGORIA, MARCA, VARIANTE, UNIDAD, PRESENTACION, PROMOCION)
SELECT ID_PRODUCTO, CATEGORIA,
    REGEXP_SUBSTR(DESCRIPCION, 'VITAMINA(-?)TE') AS MARCA,
    REGEXP_SUBSTR(DESCRIPCION, '(NF\ )?(PWD)') AS VARIANTE,
    REGEXP_SUBSTR(DESCRIPCION, '(\d+G\+?\d+G)|(\d+G\+?[0-9]?X\d+)|(\d+G)|(\d+[0-9\.]+KG)|(\d+[0-9\.]+ML)|(\d+[0-9]+KG)') AS UNIDAD,
    REGEXP_SUBSTR(DESCRIPCION, '(\([^*]+\))|(([[:digit:]](+?))(PK|CAN|PACK|BAG|POUCH|TRY))|(\d)(TRAYX)(\d)(CAN)|(\d+)(DISPX)(\d+)(SACH)') AS PRESENTACION,
    DECODE(REGEXP_SUBSTR(DESCRIPCION, 'PROMO'), 'PROMO', 1,0) AS PROMOCION
FROM PRODUCTO
WHERE REGEXP_LIKE(DESCRIPCION, 'VITAMINA(-?)TE');




------------------------------------------------ INSERT A LA TABLA DE EST_TIEMPO
INSERT INTO EST_TIEMPO (ID_TIEMPO, DIA, MES, ANIO, BIMESTRE)
SELECT DISTINCT ID_TIEMPO, 
    REGEXP_SUBSTR(ID_TIEMPO, '[^/]+',1,1) AS DIA,
    REGEXP_SUBSTR(ID_TIEMPO, '[^/]+',1,2) AS MES,
    REGEXP_SUBSTR(ID_TIEMPO, '[^/]+',1,3) AS ANIO,
CASE REGEXP_SUBSTR(ID_TIEMPO, '[^/]+',1,2)
    WHEN '01' THEN 1
    WHEN '02' THEN 1
    WHEN '03' THEN 2
    WHEN '04' THEN 2
    WHEN '05' THEN 3
    WHEN '06' THEN 3
    WHEN '07' THEN 4
    WHEN '08' THEN 4
    WHEN '09' THEN 5
    WHEN '10' THEN 5
    WHEN '11' THEN 6
    WHEN '12' THEN 6
    ELSE NULL 
END AS BIMESTRE
FROM ORDENES ORDER BY ID_TIEMPO;

------------------------------------------------ INSERT A LA TABLA DE EST_ESTADO

INSERT ALL
WHEN ID_ESTADO = 'NUL' THEN
INTO EST_ESTADO VALUES (ID_ESTADO, 'Nuevo Leon', REGION, NUMERO_REGION)
ELSE 
    INTO EST_ESTADO VALUES (ID_ESTADO, NOMBRE, REGION, NUMERO_REGION)
SELECT ID_ESTADO, NOMBRE,
        CASE ID_ESTADO
            WHEN 'BCA' THEN 'NORTE'
            WHEN 'BCS' THEN 'NORTE'
            WHEN 'CHH' THEN 'NORTE'
            WHEN 'COA' THEN 'NORTE'
            WHEN 'DUR' THEN 'NORTE'
            WHEN 'NUL' THEN 'NORTE'
            WHEN 'SIN' THEN 'NORTE'
            WHEN 'SON' THEN 'NORTE'
            WHEN 'TAM' THEN 'NORTE'
            WHEN 'AGU' THEN 'OCCIDENTE'
            WHEN 'COL' THEN 'OCCIDENTE'
            WHEN 'GUA' THEN 'OCCIDENTE'
            WHEN 'JAL' THEN 'OCCIDENTE'
            WHEN 'MIC' THEN 'OCCIDENTE'
            WHEN 'NAY' THEN 'OCCIDENTE'
            WHEN 'QUE' THEN 'OCCIDENTE'
            WHEN 'SLP' THEN 'OCCIDENTE'
            WHEN 'ZAC' THEN 'OCCIDENTE'
            WHEN 'DFE' THEN 'CENTRO'
            WHEN 'EDM' THEN 'CENTRO'
            WHEN 'HID' THEN 'CENTRO'
            WHEN 'MOR' THEN 'CENTRO'
            WHEN 'PUE' THEN 'CENTRO'
            WHEN 'TLA' THEN 'CENTRO'
            WHEN 'CAM' THEN 'SURESTE'
            WHEN 'CHI' THEN 'SURESTE'
            WHEN 'GUE' THEN 'SURESTE'
            WHEN 'OAX' THEN 'SURESTE'
            WHEN 'QUI' THEN 'SURESTE'
            WHEN 'TAB' THEN 'SURESTE'
            WHEN 'VEC' THEN 'SURESTE'
            WHEN 'YUC' THEN 'SURESTE'
            ELSE NULL
        END AS REGION,
        CASE ID_ESTADO
            WHEN 'BCA' THEN '1'
            WHEN 'BCS' THEN '1'
            WHEN 'CHH' THEN '1'
            WHEN 'COA' THEN '1'
            WHEN 'DUR' THEN '1'
            WHEN 'NUL' THEN '1'
            WHEN 'SIN' THEN '1'
            WHEN 'SON' THEN '1'
            WHEN 'TAM' THEN '1'
            WHEN 'AGU' THEN '2'
            WHEN 'COL' THEN '2'
            WHEN 'GUA' THEN '2'
            WHEN 'JAL' THEN '2'
            WHEN 'MIC' THEN '2'
            WHEN 'NAY' THEN '2'
            WHEN 'QUE' THEN '2'
            WHEN 'SLP' THEN '2'
            WHEN 'ZAC' THEN '2'
            WHEN 'DFE' THEN '3'
            WHEN 'EDM' THEN '3'
            WHEN 'HID' THEN '3'
            WHEN 'MOR' THEN '3'
            WHEN 'PUE' THEN '3'
            WHEN 'TLA' THEN '3'
            WHEN 'CAM' THEN '4'
            WHEN 'CHI' THEN '4'
            WHEN 'GUE' THEN '4'
            WHEN 'OAX' THEN '4'
            WHEN 'QUI' THEN '4'
            WHEN 'TAB' THEN '4'
            WHEN 'VEC' THEN '4'
            WHEN 'YUC' THEN '4'
            ELSE NULL
        END AS NUMERO_REGION
        FROM ESTADO;

------------------------------------------------ INSERT A LA TABLA DE EST_CLIENTE

INSERT INTO EST_CLIENTE SELECT * FROM CLIENTE;


------------------------------------------------ INSERT A LA TABLA EST_ORDENES
INSERT ALL 
WHEN ID_CLIENTE = 50148227 THEN
    INTO EST_ORDENES VALUES (ID_ORDEN, ID_TIEMPO, 50148226, ID_ESTADO, ID_PRODUCTO, UNIDADES_ORDENADAS, UNIDADES_FACTURADAS, IMPORTE_ORDENADO, IMPORTE_FACTURADO, ORDEN_CUMPLIDA)
WHEN ID_PRODUCTO = 1201201 THEN
    INTO EST_ORDENES VALUES (ID_ORDEN, ID_TIEMPO, ID_CLIENTE, ID_ESTADO, 1201001, UNIDADES_ORDENADAS, UNIDADES_FACTURADAS, IMPORTE_ORDENADO, IMPORTE_FACTURADO, ORDEN_CUMPLIDA)
ELSE
    INTO EST_ORDENES VALUES (ID_ORDEN, ID_TIEMPO, ID_CLIENTE, ID_ESTADO, ID_PRODUCTO, UNIDADES_ORDENADAS, UNIDADES_FACTURADAS, IMPORTE_ORDENADO, IMPORTE_FACTURADO, ORDEN_CUMPLIDA)
SELECT O.*, P.RESTANTES, DECODE(P.RESTANTES,0, 1, 0) AS ORDEN_CUMPLIDA
FROM 
    ORDENES O, 
    (SELECT ID_ORDEN, SUM(UNIDADES_ORDENADAS) - SUM(UNIDADES_FACTURADAS) AS RESTANTES FROM ORDENES GROUP BY ID_ORDEN) P
WHERE O.ID_ORDEN = P.ID_ORDEN ;



COMMIT;