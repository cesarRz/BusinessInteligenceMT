-- Active: 1662052389079@@148.230.13.152@1521@orcl@ISTI422
select * FROM ORDENES;

-- BUSQUEDA DE DUPLICADOS
SELECT ID_ORDEN, ID_CLIENTE, ID_ESTADO, ID_PRODUCTO, COUNT(*) FROM ORDENES
GROUP BY ID_ORDEN, ID_CLIENTE, ID_ESTADO, ID_PRODUCTO
HAVING COUNT(*)>1;
    -- CADA UNA DE LAS ORDENES DUPLICADAS
    SELECT A.* FROM ORDENES A,
    (SELECT ID_ORDEN, ID_CLIENTE, ID_ESTADO, ID_PRODUCTO, ID_TIEMPO FROM ORDENES GROUP BY ID_ORDEN, ID_CLIENTE, ID_ESTADO, ID_PRODUCTO, ID_TIEMPO HAVING COUNT(*) > 1) B
    WHERE A.ID_ORDEN = B.ID_ORDEN
        AND A.ID_PRODUCTO = B.ID_PRODUCTO
        AND A.ID_ESTADO = B.ID_ESTADO
        AND A.ID_CLIENTE = B.ID_CLIENTE
        AND A.ID_TIEMPO = B.ID_TIEMPO
    ORDER BY A.ID_ORDEN;

-- BUSQUEDA DE ORDENES CON PRODUCTOS INEXISTENTES
SELECT DISTINCT ID_PRODUCTO FROM ORDENES WHERE ID_PRODUCTO NOT IN (SELECT ID_PRODUCTO FROM PRODUCTO);
        -- COMPOROBACION
            SELECT ID_PRODUCTO, COUNT(*) FROM ordenes WHERE ID_PRODUCTO = 1201201 GROUP BY ID_PRODUCTO;
            SELECT * FROM PRODUCTO WHERE ID_PRODUCTO = 1201201 ;
        
        -- OPUESTO
        SELECT DISTINCT ID_PRODUCTO FROM PRODUCTO WHERE ID_PRODUCTO NOT IN (SELECT ID_PRODUCTO FROM ORDENES);
            
-- BUSQUEDA DE CLIENTES INEXISTENTES
SELECT DISTINCT ID_CLIENTE FROM ORDENES WHERE ID_CLIENTE NOT IN (SELECT ID_CLIENTE FROM CLIENTE);
            -- COMPROBACION
            SELECT * FROM CLIENTE WHERE ID_CLIENTE = 50148227;
            SELECT ID_CLIENTE, COUNT(*) FROM ORDENES WHERE ID_CLIENTE = 50148227 GROUP BY ID_CLIENTE;
            SELECT ID_CLIENTE, ID_ORDEN, COUNT(*) FROM ORDENES WHERE ID_CLIENTE = 50148227 GROUP BY ID_CLIENTE, ID_ORDEN;
            
    -- OPUESTO
    SELECT DISTINCT ID_CLIENTE FROM CLIENTE WHERE ID_CLIENTE NOT IN (SELECT ID_CLIENTE FROM ORDENES);
    
            
            
-- BUSQUEDA DE ESTADOS INEXISTENTES -> NO HUBO
SELECT DISTINCT ID_ESTADO FROM ORDENES WHERE ID_ESTADO NOT IN (SELECT ID_ESTADO FROM ESTADO);




-- COMPROBACION DE IMPORTES
SELECT ID_PRODUCTO, COUNT(*), SUM(UNIDADES_ORDENADAS), SUM(UNIDADES_FACTURADAS), sum(IMPORTE_ORDENADO), SUM(IMPORTE_FACTURADO),
ROUND(sum(IMPORTE_ORDENADO) / SUM(UNIDADES_ORDENADAS),2) AS ORDEN_UNIDAD, ROUND(sum(IMPORTE_FACTURADO) / SUM(UNIDADES_FACTURADAS), 2) AS FACTURA_UNIDAD
FROM ORDENES 
GROUP BY ID_PRODUCTO
HAVING ROUND(sum(IMPORTE_ORDENADO) / SUM(UNIDADES_ORDENADAS),2) != ROUND(sum(IMPORTE_FACTURADO) / SUM(UNIDADES_FACTURADAS), 2)
;

    -- CASO UNICO
    SELECT ID_ORDEN, ID_CLIENTE, ID_ESTADO ,ID_TIEMPO,ID_PRODUCTO, UNIDADES_ORDENADAS,UNIDADES_FACTURADAS, IMPORTE_ORDENADO, IMPORTE_FACTURADO,
    ROUND(IMPORTE_ORDENADO / UNIDADES_ORDENADAS,2) AS ORDEN_UNIDAD, ROUND(IMPORTE_FACTURADO / UNIDADES_FACTURADAS, 2) AS FACTURA_UNIDAD
    FROM ORDENES 
    WHERE ID_PRODUCTO = 1260157;
    
    
    
     -- CASO UNICO POR CLIENTE
    SELECT ID_CLIENTE, ID_PRODUCTO,
        COUNT(*), 
        SUM(UNIDADES_ORDENADAS), 
        SUM(UNIDADES_FACTURADAS), 
        sum(IMPORTE_ORDENADO), 
        SUM(IMPORTE_FACTURADO),
        ROUND(sum(IMPORTE_ORDENADO) / SUM(UNIDADES_ORDENADAS),2) AS ORDEN_UNIDAD, 
        ROUND(sum(IMPORTE_FACTURADO) / SUM(UNIDADES_FACTURADAS), 2) AS FACTURA_UNIDAD
    FROM ORDENES 
    WHERE ID_PRODUCTO = 1260157
    GROUP BY ID_CLIENTE, ID_PRODUCTO
    HAVING ROUND(sum(IMPORTE_ORDENADO) / SUM(UNIDADES_ORDENADAS),2) != ROUND(sum(IMPORTE_FACTURADO) / SUM(UNIDADES_FACTURADAS), 2);
    
    -- CASO UNICO POR ESTADO
    SELECT ID_ESTADO, ID_PRODUCTO,
        COUNT(*), 
        SUM(UNIDADES_ORDENADAS), 
        SUM(UNIDADES_FACTURADAS), 
        sum(IMPORTE_ORDENADO), 
        SUM(IMPORTE_FACTURADO),
        ROUND(sum(IMPORTE_ORDENADO) / SUM(UNIDADES_ORDENADAS),2) AS ORDEN_UNIDAD, 
        ROUND(sum(IMPORTE_FACTURADO) / SUM(UNIDADES_FACTURADAS), 2) AS FACTURA_UNIDAD
    FROM ORDENES 
    WHERE ID_PRODUCTO = 1260157
    GROUP BY ID_ESTADO, ID_PRODUCTO
    HAVING ROUND(sum(IMPORTE_ORDENADO) / SUM(UNIDADES_ORDENADAS),2) != ROUND(sum(IMPORTE_FACTURADO) / SUM(UNIDADES_FACTURADAS), 2);



    SELECT ID_ESTADO, ID_CLIENTE, ID_PRODUCTO,
        COUNT(*), 
        SUM(UNIDADES_ORDENADAS), 
        SUM(UNIDADES_FACTURADAS), 
        sum(IMPORTE_ORDENADO), 
        SUM(IMPORTE_FACTURADO),
        ROUND(sum(IMPORTE_ORDENADO) / SUM(UNIDADES_ORDENADAS),2) AS ORDEN_UNIDAD, 
        ROUND(sum(IMPORTE_FACTURADO) / SUM(UNIDADES_FACTURADAS), 2) AS FACTURA_UNIDAD
    FROM ORDENES 
    WHERE ID_PRODUCTO = 1260157
    GROUP BY ID_ESTADO, ID_PRODUCTO, ID_CLIENTE
    HAVING ROUND(sum(IMPORTE_ORDENADO) / SUM(UNIDADES_ORDENADAS),2) != ROUND(sum(IMPORTE_FACTURADO) / SUM(UNIDADES_FACTURADAS), 2);




SELECT B.ERROR , O.TOTAL, ROUND(B.ERROR / O.TOTAL,2) AS PORCENTAJE_ERROR
FROM 
    (SELECT COUNT(*) AS ERROR FROM 
        (SELECT ID_ORDEN, ID_CLIENTE, ID_ESTADO ,ID_TIEMPO,ID_PRODUCTO, UNIDADES_ORDENADAS,UNIDADES_FACTURADAS, IMPORTE_ORDENADO, IMPORTE_FACTURADO,
        ROUND(IMPORTE_ORDENADO / UNIDADES_ORDENADAS,2) AS ORDEN_UNIDAD, ROUND(IMPORTE_FACTURADO / UNIDADES_FACTURADAS, 2) AS FACTURA_UNIDAD
        FROM ORDENES ) A WHERE IMPORTE_ORDENADO != IMPORTE_FACTURADO) B,
    (SELECT COUNT(*) AS TOTAL FROM ORDENES)  O;



SELECT COUNT(*) FROM (SELECT COUNT(*) FROM ORDENES GROUP BY ID_ORDEN);